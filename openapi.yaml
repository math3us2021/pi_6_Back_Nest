openapi: 3.0.0
paths:
  /login:
    post:
      operationId: LoginController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLoginDto'
      responses:
        '201':
          description: ''
    get:
      operationId: LoginController_findAll
      parameters: []
      responses:
        '200':
          description: ''
  /login/{id}:
    get:
      operationId: LoginController_findById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    patch:
      operationId: LoginController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLoginDto'
      responses:
        '200':
          description: ''
    delete:
      operationId: LoginController_delete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /users:
    get:
      operationId: UsersController_findAll
      parameters: []
      responses:
        '200':
          description: ''
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
  /users/{id}:
    get:
      operationId: UsersController_findById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    patch:
      operationId: UsersController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
    delete:
      operationId: UsersController_delete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /genre:
    post:
      operationId: GenreController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGenreDto'
      responses:
        '201':
          description: ''
    get:
      operationId: GenreController_findAll
      parameters: []
      responses:
        '200':
          description: ''
  /genre/{id}:
    get:
      operationId: GenreController_findById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    patch:
      operationId: GenreController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGenreDto'
      responses:
        '200':
          description: ''
    delete:
      operationId: GenreController_delete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /movies:
    post:
      operationId: MoviesController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMovieDto'
      responses:
        '201':
          description: ''
    get:
      operationId: MoviesController_findAll
      parameters: []
      responses:
        '200':
          description: ''
  /movies/{id}:
    get:
      operationId: MoviesController_findById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    put:
      operationId: MoviesController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMovieDto'
      responses:
        '200':
          description: ''
    delete:
      operationId: MoviesController_delete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /status:
    post:
      operationId: StatusController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStatusDto'
      responses:
        '201':
          description: ''
    get:
      operationId: StatusController_findAll
      parameters: []
      responses:
        '200':
          description: ''
  /status/{id}:
    get:
      operationId: StatusController_findById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    patch:
      operationId: StatusController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStatusDto'
      responses:
        '200':
          description: ''
    delete:
      operationId: StatusController_delete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /sugestion:
    post:
      operationId: SugestionController_sugestionMovie
      parameters: []
      responses:
        '201':
          description: ''
  /dashboard/stats:
    get:
      operationId: DashboardController_getDashboardStats
      parameters: []
      responses:
        '200':
          description: ''
info:
  title: API Documentation
  description: API documentation for your application
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateLoginDto:
      type: object
      properties: {}
    UpdateLoginDto:
      type: object
      properties: {}
    CreateUserDto:
      type: object
      properties: {}
    UpdateUserDto:
      type: object
      properties: {}
    CreateGenreDto:
      type: object
      properties: {}
    UpdateGenreDto:
      type: object
      properties: {}
    CreateMovieDto:
      type: object
      properties: {}
    UpdateMovieDto:
      type: object
      properties: {}
    CreateStatusDto:
      type: object
      properties: {}
    UpdateStatusDto:
      type: object
      properties: {}
